/**************************************************************************/
/*  Copyright 2004 Gregor Zeitlinger, Bjoern Rabenstein                   */
/*                                                                        */
/*  This file is part of Lummerland.                                      */
/*                                                                        */
/*  Lummerland is free software; you can redistribute it and/or modify    */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/*  Lummerland is distributed in the hope that it will be useful,         */
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of        */
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         */
/*  GNU General Public License for more details.                          */
/*                                                                        */
/*  You should have received a copy of the GNU General Public License     */
/*  along with Lummerland; if not, write to the Free Software             */
/*  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA  */
/** *********************************************************************** */

/* Generated by Together */

package de.berlios.lummerland.gui;

import org.eclipse.jface.action.MenuManager;
import org.eclipse.jface.window.ApplicationWindow;
import org.eclipse.swt.events.DisposeEvent;
import org.eclipse.swt.events.DisposeListener;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Display;

import de.berlios.lummerland.Game;
import de.berlios.lummerland.Lummerland;
import de.berlios.lummerland.gui.action.ExitAction;
import de.berlios.lummerland.gui.board.hex.HexMapAdapter;
import de.berlios.lummerland.gui.layout.LayoutFactory;

public class MainWindow extends ApplicationWindow {

    //	Display display; // The display

    //	Shell shell; // The shell

    Game game;

    DecisionAdapter decisionAdapter;

    public MainWindow(final Game game) {

        super(null);

        this.game = game;
    }

    protected Control createContents(Composite parent) {
        
        parent.setLayout(LayoutFactory.getVerticalLayout());

        new PlayerWindowArea(parent, game);

//        decisionAdapter = pwa.getDecisionAdapter();

        new HexMapAdapter(parent, game.getBoard());

        parent.getShell().setText ("Lummerland");
        
        parent.addDisposeListener(new DisposeListener() {

            public void widgetDisposed(DisposeEvent arg0) {
                // todo implement widgetDisposed in MainWindow correctly
                Lummerland.getInstance().stopRequest();
            }
        });

        return parent;
    }
    
    

    protected MenuManager createMenuManager() {
        MenuManager menuBar = new MenuManager();
        MenuManager fileMenu = new MenuManager("&File");
//        MenuManager helpMenu = new MenuManager("&Help");
        
        fileMenu.add(new MenuManager("&New"));
//        fileMenu.add(new Separator());
        fileMenu.add(new ExitAction (this));
        
        menuBar.add(fileMenu);
//        menuBar.add(helpMenu);
        
        return menuBar;
    }
    
    public void show() {
        //shell.pack

        setBlockOnOpen(true);
        
        addMenuBar ();

        open();

        // Kill the window
        Display.getCurrent().dispose();
    }

    public Point computeSize(int wHint, int hHint, boolean changed) {
        return new Point(1000, 900);
    }

    /**
     * @return DecisionAdapter
     */
    public DecisionAdapter getDecisionAdapter() {
        return decisionAdapter;
    }

}